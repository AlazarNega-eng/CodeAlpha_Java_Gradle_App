name: Java CI with Gradle

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for the "main" branch
  push:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Make the gradlew script executable
      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      # Step 4: Run the build task with Gradle
      # This command will compile the code, run all tests, and build the JAR file.
      - name: Build with Gradle
        run: ./gradlew build

      # Step 5 (Optional but Recommended): Upload the test reports
      - name: Upload Test Reports
        if: always() # This ensures reports are uploaded even if tests fail
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: app/build/reports/tests/test/

      # Step 6 (Optional but Recommended): Upload the executable JAR file
      - name: Upload JAR Artifact
        if: success() # Only upload the JAR if the build succeeds
        uses: actions/upload-artifact@v3
        with:
          name: executable-jar
          path: app/build/libs/*.jar
